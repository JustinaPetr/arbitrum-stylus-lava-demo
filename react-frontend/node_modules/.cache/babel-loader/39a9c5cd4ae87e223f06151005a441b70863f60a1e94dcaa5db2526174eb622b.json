{"ast":null,"code":"var _jsxFileName = \"/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/mint-token-dapp/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport ConnectWallet from './components/ConnectWallet';\nimport TokenForm from './components/TokenForm';\nimport CandyTokenABI from './contracts/CandyToken.json';\nimport { CONFIG } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _netStatus$chainId, _netStatus$blockNumbe;\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [tokenName, setTokenName] = useState('Token');\n  const [tokenSymbol, setTokenSymbol] = useState('TKN');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mintAmount, setMintAmount] = useState('');\n  const [transferTo, setTransferTo] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Lava read-only provider + network status\n  const [lavaProvider, setLavaProvider] = useState(null);\n  const [netStatus, setNetStatus] = useState({\n    chainId: null,\n    blockNumber: null,\n    gasPriceGwei: null,\n    blockHash: null\n  });\n\n  // --- Helpers ---\n  const isValidAmount = val => {\n    if (typeof val !== 'string') return false;\n    const trimmed = val.trim();\n    if (trimmed === '') return false;\n    // up to 18 decimals for ERC-20 with 18 decimals\n    return /^\\d+(?:\\.\\d{1,18})?$/.test(trimmed);\n  };\n  const shortAddress = addr => addr ? `${addr.slice(0, 6)}â€¦${addr.slice(-4)}` : '';\n\n  // Initialize contract with signer\n  const initContract = async activeSigner => {\n    try {\n      const contract = new ethers.Contract(CONFIG.CONTRACT_ADDRESS, CandyTokenABI, activeSigner);\n      setTokenContract(contract);\n      const [name, symbol] = await Promise.all([contract.name(), contract.symbol()]);\n      setTokenName(name);\n      setTokenSymbol(symbol);\n      const userAddress = await activeSigner.getAddress();\n      const userBalance = await contract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(userBalance));\n    } catch (e) {\n      console.error('Error initializing contract:', e);\n      setError('Failed to connect to the token contract.');\n    }\n  };\n\n  // Connect wallet\n  const connectWallet = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum || !ethereum.isMetaMask) {\n      setError('Please install MetaMask to use this application.');\n      return;\n    }\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      const nextSigner = web3Provider.getSigner();\n      setSigner(nextSigner);\n      await initContract(nextSigner);\n      setError('');\n    } catch (e) {\n      console.error('Error connecting wallet:', e);\n      setError('Failed to connect wallet.');\n    }\n  };\n  const mintTokens = async () => {\n    if (!tokenContract || !signer || !isValidAmount(mintAmount)) {\n      setError('Enter a valid mint amount and ensure your wallet is connected.');\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      const amount = ethers.utils.parseEther(mintAmount.trim());\n      const tx = await tokenContract.mint(amount.toString());\n      await tx.wait();\n      const userAddress = await signer.getAddress();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      setSuccessMessage(`Minted ${mintAmount} ${tokenSymbol}.`);\n      setMintAmount('');\n    } catch (e) {\n      console.error('Error minting tokens:', e);\n      setError(`Failed to mint tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const transferTokens = async () => {\n    if (!tokenContract || !signer || !transferTo || !isValidAmount(transferAmount)) {\n      setError('Provide a valid recipient address and amount, and connect your wallet.');\n      return;\n    }\n    const userAddress = await signer.getAddress();\n    if (transferTo.toLowerCase() === userAddress.toLowerCase()) {\n      setError('You cannot transfer tokens to your own address.');\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      const amount = ethers.utils.parseEther(transferAmount.trim());\n      const tx = await tokenContract.transfer(transferTo, amount.toString());\n      await tx.wait();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      setSuccessMessage(`Transferred ${transferAmount} ${tokenSymbol} to ${shortAddress(transferTo)}.`);\n      setTransferTo('');\n      setTransferAmount('');\n    } catch (e) {\n      console.error('Error transferring tokens:', e);\n      setError(`Failed to transfer tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleMintSubmit = e => {\n    e.preventDefault();\n    mintTokens();\n  };\n  const handleTransferSubmit = e => {\n    e.preventDefault();\n    transferTokens();\n  };\n\n  // Initialize providers on mount\n  useEffect(() => {\n    // Set up a read-only Lava provider to showcase RPC reads\n    try {\n      var _CONFIG$NETWORK, _CONFIG$NETWORK$rpcUr;\n      const lavaUrl = (_CONFIG$NETWORK = CONFIG.NETWORK) === null || _CONFIG$NETWORK === void 0 ? void 0 : (_CONFIG$NETWORK$rpcUr = _CONFIG$NETWORK.rpcUrls) === null || _CONFIG$NETWORK$rpcUr === void 0 ? void 0 : _CONFIG$NETWORK$rpcUr[0];\n      if (lavaUrl) {\n        const lp = new ethers.providers.JsonRpcProvider(lavaUrl);\n        setLavaProvider(lp);\n      }\n    } catch (e) {\n      console.error('Error creating Lava provider:', e);\n    }\n    const checkIfMetaMaskIsInstalled = () => {\n      const {\n        ethereum\n      } = window;\n      return Boolean(ethereum && ethereum.isMetaMask);\n    };\n    const initProvider = async () => {\n      if (!checkIfMetaMaskIsInstalled()) {\n        setError('Please install MetaMask to use this application.');\n        return;\n      }\n      if (window.ethereum) {\n        try {\n          // Network guard (Arbitrum Sepolia by default from CONFIG)\n          try {\n            const chainId = await window.ethereum.request({\n              method: 'eth_chainId'\n            });\n            const chainIdNum = parseInt(chainId, 16);\n            if (chainIdNum !== CONFIG.CHAIN_ID_NUM) {\n              setError(`Switch to the correct network. Current chain ID: ${chainIdNum}`);\n              try {\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{\n                    chainId: CONFIG.NETWORK.chainId\n                  }]\n                });\n                setError('');\n              } catch (switchError) {\n                if (switchError.code === 4902) {\n                  try {\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [CONFIG.NETWORK]\n                    });\n                    setError('');\n                  } catch (addError) {\n                    console.error('Error adding network:', addError);\n                    setError('Add the target network to MetaMask to continue.');\n                  }\n                } else {\n                  console.error('Error switching network:', switchError);\n                }\n              }\n            }\n          } catch (chainError) {\n            console.error('Error checking chain ID:', chainError);\n          }\n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          setProvider(web3Provider);\n          const accounts = await web3Provider.listAccounts();\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            const nextSigner = web3Provider.getSigner();\n            setSigner(nextSigner);\n            await initContract(nextSigner);\n          }\n          window.ethereum.on('accountsChanged', accounts => {\n            if (accounts.length > 0) {\n              setAccount(accounts[0]);\n              const s = web3Provider.getSigner();\n              setSigner(s);\n              initContract(s);\n            } else {\n              setAccount('');\n              setSigner(null);\n              setTokenContract(null);\n              setBalance('0');\n            }\n          });\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n        } catch (e) {\n          console.error('Error initializing provider:', e);\n          setError('Failed to connect to the Ethereum provider.');\n        }\n      } else {\n        setError('Please install MetaMask to use this application.');\n      }\n    };\n    initProvider();\n  }, []);\n\n  // Poll live network status from Lava RPC\n  useEffect(() => {\n    if (!lavaProvider) return;\n    let isStale = false;\n    let intervalId;\n    const fetchStatus = async () => {\n      try {\n        const [network, blockNumber, gasPrice] = await Promise.all([lavaProvider.getNetwork(), lavaProvider.getBlockNumber(), lavaProvider.getGasPrice()]);\n        const block = await lavaProvider.getBlock(blockNumber);\n        if (isStale) return;\n        setNetStatus({\n          chainId: network.chainId,\n          blockNumber,\n          gasPriceGwei: Number(ethers.utils.formatUnits(gasPrice, 'gwei')).toFixed(2),\n          blockHash: (block === null || block === void 0 ? void 0 : block.hash) || null\n        });\n      } catch (e) {\n        console.error('Error fetching network status from Lava:', e);\n      }\n    };\n    fetchStatus();\n    intervalId = setInterval(fetchStatus, 10000);\n    return () => {\n      isStale = true;\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [lavaProvider]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Token Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: [\"Interact with your ERC-20 on \", CONFIG.NETWORK.chainName || 'the configured network', \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"toolbar\",\n        children: /*#__PURE__*/_jsxDEV(ConnectWallet, {\n          account: account,\n          connectWallet: connectWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"status\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 28\n      }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: [tokenName, \" (\", tokenSymbol, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: shortAddress(CONFIG.CONTRACT_ADDRESS)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: shortAddress(account)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: [balance, \" \", tokenSymbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Mint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleMintSubmit,\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mintAmount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"mintAmount\",\n                value: mintAmount,\n                onChange: e => setMintAmount(e.target.value),\n                placeholder: \"e.g. 100.0\",\n                inputMode: \"decimal\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              disabled: isProcessing,\n              children: isProcessing ? 'Processingâ€¦' : 'Mint'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTransferSubmit,\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"transferTo\",\n                children: \"Recipient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"transferTo\",\n                value: transferTo,\n                onChange: e => setTransferTo(e.target.value),\n                placeholder: \"0x\\u2026\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"transferAmount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"transferAmount\",\n                value: transferAmount,\n                onChange: e => setTransferAmount(e.target.value),\n                placeholder: \"e.g. 25\",\n                inputMode: \"decimal\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              disabled: isProcessing,\n              children: isProcessing ? 'Processingâ€¦' : 'Transfer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Network Status (via Lava RPC)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Chain ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: (_netStatus$chainId = netStatus.chainId) !== null && _netStatus$chainId !== void 0 ? _netStatus$chainId : 'â€”'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Block #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: (_netStatus$blockNumbe = netStatus.blockNumber) !== null && _netStatus$blockNumbe !== void 0 ? _netStatus$blockNumbe : 'â€”'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Gas Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: netStatus.gasPriceGwei ? `${netStatus.gasPriceGwei} Gwei` : 'â€”'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Block Hash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: netStatus.blockHash ? shortAddress(netStatus.blockHash) : 'â€”'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"Wallet not connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connect your wallet to view your balance and manage tokens.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Built on \", CONFIG.NETWORK.chainName || 'configured network', \" \\u2022 Powered by Lava RPC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WIKeunyVngHJFAYStep5YH95GAQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","ConnectWallet","TokenForm","CandyTokenABI","CONFIG","jsxDEV","_jsxDEV","App","_s","_netStatus$chainId","_netStatus$blockNumbe","account","setAccount","provider","setProvider","signer","setSigner","tokenContract","setTokenContract","tokenName","setTokenName","tokenSymbol","setTokenSymbol","isProcessing","setIsProcessing","mintAmount","setMintAmount","transferTo","setTransferTo","transferAmount","setTransferAmount","balance","setBalance","error","setError","successMessage","setSuccessMessage","lavaProvider","setLavaProvider","netStatus","setNetStatus","chainId","blockNumber","gasPriceGwei","blockHash","isValidAmount","val","trimmed","trim","test","shortAddress","addr","slice","initContract","activeSigner","contract","Contract","CONTRACT_ADDRESS","name","symbol","Promise","all","userAddress","getAddress","userBalance","balanceOf","utils","formatEther","e","console","connectWallet","ethereum","window","isMetaMask","web3Provider","providers","Web3Provider","accounts","request","method","nextSigner","getSigner","mintTokens","amount","parseEther","tx","mint","toString","wait","newBalance","message","transferTokens","toLowerCase","transfer","handleMintSubmit","preventDefault","handleTransferSubmit","_CONFIG$NETWORK","_CONFIG$NETWORK$rpcUr","lavaUrl","NETWORK","rpcUrls","lp","JsonRpcProvider","checkIfMetaMaskIsInstalled","Boolean","initProvider","chainIdNum","parseInt","CHAIN_ID_NUM","params","switchError","code","addError","chainError","listAccounts","length","on","s","location","reload","isStale","intervalId","fetchStatus","network","gasPrice","getNetwork","getBlockNumber","getGasPrice","block","getBlock","Number","formatUnits","toFixed","hash","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chainName","role","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","inputMode","autoComplete","required","disabled","_c","$RefreshReg$"],"sources":["/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/mint-token-dapp/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport ConnectWallet from './components/ConnectWallet';\nimport TokenForm from './components/TokenForm';\nimport CandyTokenABI from './contracts/CandyToken.json';\nimport { CONFIG } from './config';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [tokenName, setTokenName] = useState('Token');\n  const [tokenSymbol, setTokenSymbol] = useState('TKN');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mintAmount, setMintAmount] = useState('');\n  const [transferTo, setTransferTo] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Lava read-only provider + network status\n  const [lavaProvider, setLavaProvider] = useState(null);\n  const [netStatus, setNetStatus] = useState({\n    chainId: null,\n    blockNumber: null,\n    gasPriceGwei: null,\n    blockHash: null,\n  });\n\n  // --- Helpers ---\n  const isValidAmount = (val) => {\n    if (typeof val !== 'string') return false;\n    const trimmed = val.trim();\n    if (trimmed === '') return false;\n    // up to 18 decimals for ERC-20 with 18 decimals\n    return /^\\d+(?:\\.\\d{1,18})?$/.test(trimmed);\n  };\n\n  const shortAddress = (addr) => (addr ? `${addr.slice(0, 6)}â€¦${addr.slice(-4)}` : '');\n\n  // Initialize contract with signer\n  const initContract = async (activeSigner) => {\n    try {\n      const contract = new ethers.Contract(\n        CONFIG.CONTRACT_ADDRESS,\n        CandyTokenABI,\n        activeSigner\n      );\n      setTokenContract(contract);\n\n      const [name, symbol] = await Promise.all([contract.name(), contract.symbol()]);\n      setTokenName(name);\n      setTokenSymbol(symbol);\n\n      const userAddress = await activeSigner.getAddress();\n      const userBalance = await contract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(userBalance));\n    } catch (e) {\n      console.error('Error initializing contract:', e);\n      setError('Failed to connect to the token contract.');\n    }\n  };\n\n  // Connect wallet\n  const connectWallet = async () => {\n    const { ethereum } = window;\n    if (!ethereum || !ethereum.isMetaMask) {\n      setError('Please install MetaMask to use this application.');\n      return;\n    }\n\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      const nextSigner = web3Provider.getSigner();\n      setSigner(nextSigner);\n\n      await initContract(nextSigner);\n      setError('');\n    } catch (e) {\n      console.error('Error connecting wallet:', e);\n      setError('Failed to connect wallet.');\n    }\n  };\n\n  const mintTokens = async () => {\n    if (!tokenContract || !signer || !isValidAmount(mintAmount)) {\n      setError('Enter a valid mint amount and ensure your wallet is connected.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n\n    try {\n      const amount = ethers.utils.parseEther(mintAmount.trim());\n      const tx = await tokenContract.mint(amount.toString());\n      await tx.wait();\n\n      const userAddress = await signer.getAddress();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n\n      setSuccessMessage(`Minted ${mintAmount} ${tokenSymbol}.`);\n      setMintAmount('');\n    } catch (e) {\n      console.error('Error minting tokens:', e);\n      setError(`Failed to mint tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const transferTokens = async () => {\n    if (!tokenContract || !signer || !transferTo || !isValidAmount(transferAmount)) {\n      setError('Provide a valid recipient address and amount, and connect your wallet.');\n      return;\n    }\n\n    const userAddress = await signer.getAddress();\n    if (transferTo.toLowerCase() === userAddress.toLowerCase()) {\n      setError('You cannot transfer tokens to your own address.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n\n    try {\n      const amount = ethers.utils.parseEther(transferAmount.trim());\n      const tx = await tokenContract.transfer(transferTo, amount.toString());\n      await tx.wait();\n\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n\n      setSuccessMessage(`Transferred ${transferAmount} ${tokenSymbol} to ${shortAddress(transferTo)}.`);\n      setTransferTo('');\n      setTransferAmount('');\n    } catch (e) {\n      console.error('Error transferring tokens:', e);\n      setError(`Failed to transfer tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleMintSubmit = (e) => {\n    e.preventDefault();\n    mintTokens();\n  };\n\n  const handleTransferSubmit = (e) => {\n    e.preventDefault();\n    transferTokens();\n  };\n\n  // Initialize providers on mount\n  useEffect(() => {\n    // Set up a read-only Lava provider to showcase RPC reads\n    try {\n      const lavaUrl = CONFIG.NETWORK?.rpcUrls?.[0];\n      if (lavaUrl) {\n        const lp = new ethers.providers.JsonRpcProvider(lavaUrl);\n        setLavaProvider(lp);\n      }\n    } catch (e) {\n      console.error('Error creating Lava provider:', e);\n    }\n\n    const checkIfMetaMaskIsInstalled = () => {\n      const { ethereum } = window;\n      return Boolean(ethereum && ethereum.isMetaMask);\n    };\n\n    const initProvider = async () => {\n      if (!checkIfMetaMaskIsInstalled()) {\n        setError('Please install MetaMask to use this application.');\n        return;\n      }\n\n      if (window.ethereum) {\n        try {\n          // Network guard (Arbitrum Sepolia by default from CONFIG)\n          try {\n            const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n            const chainIdNum = parseInt(chainId, 16);\n\n            if (chainIdNum !== CONFIG.CHAIN_ID_NUM) {\n              setError(`Switch to the correct network. Current chain ID: ${chainIdNum}`);\n              try {\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{ chainId: CONFIG.NETWORK.chainId }],\n                });\n                setError('');\n              } catch (switchError) {\n                if (switchError.code === 4902) {\n                  try {\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [CONFIG.NETWORK],\n                    });\n                    setError('');\n                  } catch (addError) {\n                    console.error('Error adding network:', addError);\n                    setError('Add the target network to MetaMask to continue.');\n                  }\n                } else {\n                  console.error('Error switching network:', switchError);\n                }\n              }\n            }\n          } catch (chainError) {\n            console.error('Error checking chain ID:', chainError);\n          }\n\n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          setProvider(web3Provider);\n\n          const accounts = await web3Provider.listAccounts();\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            const nextSigner = web3Provider.getSigner();\n            setSigner(nextSigner);\n            await initContract(nextSigner);\n          }\n\n          window.ethereum.on('accountsChanged', (accounts) => {\n            if (accounts.length > 0) {\n              setAccount(accounts[0]);\n              const s = web3Provider.getSigner();\n              setSigner(s);\n              initContract(s);\n            } else {\n              setAccount('');\n              setSigner(null);\n              setTokenContract(null);\n              setBalance('0');\n            }\n          });\n\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n        } catch (e) {\n          console.error('Error initializing provider:', e);\n          setError('Failed to connect to the Ethereum provider.');\n        }\n      } else {\n        setError('Please install MetaMask to use this application.');\n      }\n    };\n\n    initProvider();\n  }, []);\n\n  // Poll live network status from Lava RPC\n  useEffect(() => {\n    if (!lavaProvider) return;\n\n    let isStale = false;\n    let intervalId;\n\n    const fetchStatus = async () => {\n      try {\n        const [network, blockNumber, gasPrice] = await Promise.all([\n          lavaProvider.getNetwork(),\n          lavaProvider.getBlockNumber(),\n          lavaProvider.getGasPrice(),\n        ]);\n        const block = await lavaProvider.getBlock(blockNumber);\n        if (isStale) return;\n        setNetStatus({\n          chainId: network.chainId,\n          blockNumber,\n          gasPriceGwei: Number(ethers.utils.formatUnits(gasPrice, 'gwei')).toFixed(2),\n          blockHash: block?.hash || null,\n        });\n      } catch (e) {\n        console.error('Error fetching network status from Lava:', e);\n      }\n    };\n\n    fetchStatus();\n    intervalId = setInterval(fetchStatus, 10_000);\n\n    return () => {\n      isStale = true;\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [lavaProvider]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <div className=\"container\">\n          <h1 className=\"title\">Token Dashboard</h1>\n          <p className=\"subtitle\">Interact with your ERC-20 on {CONFIG.NETWORK.chainName || 'the configured network'}.</p>\n        </div>\n      </header>\n\n      <main className=\"container\">\n        <section className=\"toolbar\">\n          <ConnectWallet account={account} connectWallet={connectWallet} />\n        </section>\n\n        {error && <div className=\"alert alert-error\" role=\"alert\">{error}</div>}\n        {successMessage && <div className=\"alert alert-success\" role=\"status\">{successMessage}</div>}\n\n        {account ? (\n          <div className=\"grid\">\n            <div className=\"card\">\n              <h2 className=\"card-title\">{tokenName} ({tokenSymbol})</h2>\n              <div className=\"meta\">\n                <div className=\"meta-row\">\n                  <span className=\"label\">Contract</span>\n                  <span className=\"value monospace\">{shortAddress(CONFIG.CONTRACT_ADDRESS)}</span>\n                </div>\n                <div className=\"meta-row\">\n                  <span className=\"label\">Account</span>\n                  <span className=\"value monospace\">{shortAddress(account)}</span>\n                </div>\n                <div className=\"meta-row\">\n                  <span className=\"label\">Balance</span>\n                  <span className=\"value\">{balance} {tokenSymbol}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <h3 className=\"card-title\">Mint</h3>\n              <form onSubmit={handleMintSubmit} className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"mintAmount\">Amount</label>\n                  <input\n                    type=\"text\"\n                    id=\"mintAmount\"\n                    value={mintAmount}\n                    onChange={(e) => setMintAmount(e.target.value)}\n                    placeholder=\"e.g. 100.0\"\n                    inputMode=\"decimal\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn\" disabled={isProcessing}>\n                  {isProcessing ? 'Processingâ€¦' : 'Mint'}\n                </button>\n              </form>\n            </div>\n\n            <div className=\"card\">\n              <h3 className=\"card-title\">Transfer</h3>\n              <form onSubmit={handleTransferSubmit} className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"transferTo\">Recipient</label>\n                  <input\n                    type=\"text\"\n                    id=\"transferTo\"\n                    value={transferTo}\n                    onChange={(e) => setTransferTo(e.target.value)}\n                    placeholder=\"0xâ€¦\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"transferAmount\">Amount</label>\n                  <input\n                    type=\"text\"\n                    id=\"transferAmount\"\n                    value={transferAmount}\n                    onChange={(e) => setTransferAmount(e.target.value)}\n                    placeholder=\"e.g. 25\"\n                    inputMode=\"decimal\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn\" disabled={isProcessing}>\n                  {isProcessing ? 'Processingâ€¦' : 'Transfer'}\n                </button>\n              </form>\n            </div>\n\n            <div className=\"card\">\n              <h3 className=\"card-title\">Network Status (via Lava RPC)</h3>\n              <div className=\"meta\">\n                <div className=\"meta-row\">\n                  <span className=\"label\">Chain ID</span>\n                  <span className=\"value monospace\">{netStatus.chainId ?? 'â€”'}</span>\n                </div>\n                <div className=\"meta-row\">\n                  <span className=\"label\">Block #</span>\n                  <span className=\"value monospace\">{netStatus.blockNumber ?? 'â€”'}</span>\n                </div>\n                <div className=\"meta-row\">\n                  <span className=\"label\">Gas Price</span>\n                  <span className=\"value\">{netStatus.gasPriceGwei ? `${netStatus.gasPriceGwei} Gwei` : 'â€”'}</span>\n                </div>\n                <div className=\"meta-row\">\n                  <span className=\"label\">Block Hash</span>\n                  <span className=\"value monospace\">{netStatus.blockHash ? shortAddress(netStatus.blockHash) : 'â€”'}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"empty-state card\">\n            <h2 className=\"card-title\">Wallet not connected</h2>\n            <p>Connect your wallet to view your balance and manage tokens.</p>\n          </div>\n        )}\n      </main>\n\n      <footer className=\"app-footer\">\n        <div className=\"container\">\n          <p>Built on {CONFIG.NETWORK.chainName || 'configured network'} â€¢ Powered by Lava RPC</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}