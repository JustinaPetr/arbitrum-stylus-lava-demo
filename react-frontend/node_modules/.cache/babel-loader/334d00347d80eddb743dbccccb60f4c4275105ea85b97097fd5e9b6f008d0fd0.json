{"ast":null,"code":"var _jsxFileName = \"/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/mint-token-dapp/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Confetti from 'react-confetti';\nimport './App.css';\nimport CandyMachine from './components/CandyMachine';\nimport ConnectWallet from './components/ConnectWallet';\nimport TokenForm from './components/TokenForm';\nimport CandyTokenABI from './contracts/CandyToken.json';\nimport { CONFIG } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [tokenName, setTokenName] = useState('CandyToken');\n  const [tokenSymbol, setTokenSymbol] = useState('CANDY');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mintAmount, setMintAmount] = useState('');\n  const [transferTo, setTransferTo] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Initialize contract with signer\n  const initContract = async signer => {\n    try {\n      // Connect to the deployed contract\n      const contract = new ethers.Contract(CONFIG.CONTRACT_ADDRESS, CandyTokenABI, signer);\n      setTokenContract(contract);\n\n      // Get token details\n      const name = await contract.name();\n      const symbol = await contract.symbol();\n      setTokenName(name);\n      setTokenSymbol(symbol);\n\n      // Get user balance\n      const userAddress = await signer.getAddress();\n      const userBalance = await contract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(userBalance));\n    } catch (error) {\n      console.error(\"Error initializing contract:\", error);\n      setError(\"Failed to connect to the CandyToken contract\");\n    }\n  };\n\n  // Connect wallet function\n  const connectWallet = async () => {\n    // Check if MetaMask is installed\n    const {\n      ethereum\n    } = window;\n    if (!ethereum || !ethereum.isMetaMask) {\n      setError(\"Please install MetaMask to use this dApp\");\n      return;\n    }\n    try {\n      // Create a new provider instance to ensure we have the latest state\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n\n      // Request account access\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      const signer = web3Provider.getSigner();\n      setSigner(signer);\n\n      // Initialize contract with the signer\n      await initContract(signer);\n    } catch (error) {\n      console.error(\"Error connecting wallet:\", error);\n      setError(\"Failed to connect wallet: \" + (error.message || \"Unknown error\"));\n    }\n  };\n  const mintTokens = async () => {\n    if (!tokenContract || !signer || !mintAmount) {\n      setError(\"Please connect your wallet and enter an amount to mint\");\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      // Convert the amount to a string first to avoid BigNumber issues\n      const amountStr = mintAmount.toString();\n      const amount = ethers.utils.parseEther(amountStr);\n      const userAddress = await signer.getAddress();\n\n      // Call the mint function which mints tokens to the caller's address\n      // Use the string representation of the amount to avoid BigNumber issues\n      const tx = await tokenContract.mint(amount.toString());\n      await tx.wait();\n\n      // Update balance\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      setSuccessMessage(`Successfully minted ${mintAmount} ${tokenSymbol} tokens!`);\n      setMintAmount('');\n      setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 5000);\n    } catch (error) {\n      console.error(\"Error minting tokens:\", error);\n      setError(\"Failed to mint tokens: \" + (error.message || \"Unknown error\"));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const transferTokens = async () => {\n    if (!tokenContract || !signer || !transferTo || !transferAmount) {\n      setError(\"Please connect your wallet, enter a recipient address, and an amount to transfer\");\n      return;\n    }\n\n    // Check if user is trying to transfer to their own address\n    const userAddress = await signer.getAddress();\n    if (transferTo.toLowerCase() === userAddress.toLowerCase()) {\n      setError(\"You cannot transfer tokens to your own wallet address\");\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      // Convert the amount to a string first to avoid BigNumber issues\n      const amountStr = transferAmount.toString();\n      const amount = ethers.utils.parseEther(amountStr);\n\n      // Call the transfer function with string representation of amount\n      const tx = await tokenContract.transfer(transferTo, amount.toString());\n      await tx.wait();\n\n      // Update balance\n      const userAddress = await signer.getAddress();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      setSuccessMessage(`Successfully transferred ${transferAmount} ${tokenSymbol} tokens to ${transferTo}!`);\n      setTransferTo('');\n      setTransferAmount('');\n    } catch (error) {\n      console.error(\"Error transferring tokens:\", error);\n      setError(\"Failed to transfer tokens: \" + (error.message || \"Unknown error\"));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleMintSubmit = e => {\n    e.preventDefault();\n    mintTokens();\n  };\n  const handleTransferSubmit = e => {\n    e.preventDefault();\n    transferTokens();\n  };\n\n  // Initialize provider on component mount\n  useEffect(() => {\n    const checkIfMetaMaskIsInstalled = () => {\n      const {\n        ethereum\n      } = window;\n      return Boolean(ethereum && ethereum.isMetaMask);\n    };\n    const initProvider = async () => {\n      // Wait for window.ethereum to be injected\n      if (!checkIfMetaMaskIsInstalled()) {\n        setError(\"Please install MetaMask to use this dApp\");\n        return;\n      }\n\n      // Make sure ethereum object is fully loaded\n      if (window.ethereum) {\n        try {\n          // Check if we need to switch to Arbitrum Sepolia network\n          try {\n            const chainId = await window.ethereum.request({\n              method: 'eth_chainId'\n            });\n            const chainIdNum = parseInt(chainId, 16);\n            if (chainIdNum !== CONFIG.CHAIN_ID_NUM) {\n              setError(`Please switch to Arbitrum Sepolia network in your MetaMask wallet. Current network ID: ${chainIdNum}`);\n\n              // We'll still try to switch, but won't block the app if it fails\n              try {\n                // Try to switch to Arbitrum Sepolia\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{\n                    chainId: CONFIG.NETWORK.chainId\n                  }]\n                });\n                // Clear the error if successful\n                setError('');\n              } catch (switchError) {\n                // This error code indicates that the chain has not been added to MetaMask\n                if (switchError.code === 4902) {\n                  try {\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [CONFIG.NETWORK]\n                    });\n                    // Clear the error if successful\n                    setError('');\n                  } catch (addError) {\n                    console.error(\"Error adding network:\", addError);\n                    setError(\"Please manually add Arbitrum Sepolia network to MetaMask\");\n                  }\n                } else {\n                  console.error(\"Error switching network:\", switchError);\n                  // We already set an error above, so no need to update it here\n                }\n              }\n            }\n          } catch (chainError) {\n            console.error(\"Error checking chain ID:\", chainError);\n            // Continue anyway, we'll just show a warning\n          }\n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          setProvider(web3Provider);\n\n          // Get accounts\n          const accounts = await web3Provider.listAccounts();\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            const signer = web3Provider.getSigner();\n            setSigner(signer);\n\n            // Initialize contract\n            await initContract(signer);\n          }\n\n          // Listen for account changes\n          window.ethereum.on('accountsChanged', accounts => {\n            if (accounts.length > 0) {\n              setAccount(accounts[0]);\n              const signer = web3Provider.getSigner();\n              setSigner(signer);\n              initContract(signer);\n            } else {\n              setAccount('');\n              setSigner(null);\n              setTokenContract(null);\n              setBalance('0');\n            }\n          });\n\n          // Listen for chain changes\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n        } catch (error) {\n          console.error(\"Error initializing provider:\", error);\n          setError(\"Failed to connect to Ethereum provider\");\n        }\n      } else {\n        setError(\"Please install MetaMask to use this dApp\");\n      }\n    };\n    initProvider();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDF6D Candy Token Dashboard \\uD83C\\uDF6C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Interact with your sweet ERC20 token on Arbitrum Sepolia!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(ConnectWallet, {\n        account: account,\n        connectWallet: connectWallet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 28\n      }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\uD83C\\uDF6C \", tokenName, \" (\", tokenSymbol, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"contract-address\",\n            children: [\"Contract Address: \", CONFIG.CONTRACT_ADDRESS]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"balance\",\n            children: [\"Your Balance: \", balance, \" \", tokenSymbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Mint Tokens\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"note\",\n              children: \"Mint your own CandyToken tokens!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleMintSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"mintAmount\",\n                  children: \"Amount to Mint:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"mintAmount\",\n                  value: mintAmount,\n                  onChange: e => setMintAmount(e.target.value),\n                  placeholder: \"Enter amount\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"action-button\",\n                disabled: isProcessing,\n                children: isProcessing ? 'Processing...' : 'Mint Tokens'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Transfer Tokens\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleTransferSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"transferTo\",\n                  children: \"Recipient Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"transferTo\",\n                  value: transferTo,\n                  onChange: e => setTransferTo(e.target.value),\n                  placeholder: \"0x...\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"transferAmount\",\n                  children: \"Amount to Transfer:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"transferAmount\",\n                  value: transferAmount,\n                  onChange: e => setTransferAmount(e.target.value),\n                  placeholder: \"Enter amount\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"action-button\",\n                disabled: isProcessing,\n                children: isProcessing ? 'Processing...' : 'Transfer Tokens'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CandyMachine, {\n        isProcessing: isProcessing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Built with \\u2764\\uFE0F on Arbitrum Stylus by Web3Compass Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lwlMXJ37BoPDzlJSka5N2oxZ8NE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","Confetti","CandyMachine","ConnectWallet","TokenForm","CandyTokenABI","CONFIG","jsxDEV","_jsxDEV","App","_s","account","setAccount","provider","setProvider","signer","setSigner","tokenContract","setTokenContract","tokenName","setTokenName","tokenSymbol","setTokenSymbol","isProcessing","setIsProcessing","mintAmount","setMintAmount","transferTo","setTransferTo","transferAmount","setTransferAmount","balance","setBalance","showConfetti","setShowConfetti","error","setError","successMessage","setSuccessMessage","initContract","contract","Contract","CONTRACT_ADDRESS","name","symbol","userAddress","getAddress","userBalance","balanceOf","utils","formatEther","console","connectWallet","ethereum","window","isMetaMask","web3Provider","providers","Web3Provider","accounts","request","method","getSigner","message","mintTokens","amountStr","toString","amount","parseEther","tx","mint","wait","newBalance","setTimeout","transferTokens","toLowerCase","transfer","handleMintSubmit","e","preventDefault","handleTransferSubmit","checkIfMetaMaskIsInstalled","Boolean","initProvider","chainId","chainIdNum","parseInt","CHAIN_ID_NUM","params","NETWORK","switchError","code","addError","chainError","listAccounts","length","on","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/mint-token-dapp/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Confetti from 'react-confetti';\nimport './App.css';\nimport CandyMachine from './components/CandyMachine';\nimport ConnectWallet from './components/ConnectWallet';\nimport TokenForm from './components/TokenForm';\nimport CandyTokenABI from './contracts/CandyToken.json';\nimport { CONFIG } from './config';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [tokenName, setTokenName] = useState('CandyToken');\n  const [tokenSymbol, setTokenSymbol] = useState('CANDY');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mintAmount, setMintAmount] = useState('');\n  const [transferTo, setTransferTo] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Initialize contract with signer\n  const initContract = async (signer) => {\n    try {\n      // Connect to the deployed contract\n      const contract = new ethers.Contract(\n        CONFIG.CONTRACT_ADDRESS,\n        CandyTokenABI,\n        signer\n      );\n      setTokenContract(contract);\n      \n      // Get token details\n      const name = await contract.name();\n      const symbol = await contract.symbol();\n      setTokenName(name);\n      setTokenSymbol(symbol);\n      \n      // Get user balance\n      const userAddress = await signer.getAddress();\n      const userBalance = await contract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(userBalance));\n    } catch (error) {\n      console.error(\"Error initializing contract:\", error);\n      setError(\"Failed to connect to the CandyToken contract\");\n    }\n  };\n\n  // Connect wallet function\n  const connectWallet = async () => {\n    // Check if MetaMask is installed\n    const { ethereum } = window;\n    if (!ethereum || !ethereum.isMetaMask) {\n      setError(\"Please install MetaMask to use this dApp\");\n      return;\n    }\n    \n    try {\n      // Create a new provider instance to ensure we have the latest state\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n      \n      // Request account access\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      const signer = web3Provider.getSigner();\n      setSigner(signer);\n      \n      // Initialize contract with the signer\n      await initContract(signer);\n    } catch (error) {\n      console.error(\"Error connecting wallet:\", error);\n      setError(\"Failed to connect wallet: \" + (error.message || \"Unknown error\"));\n    }\n  };\n  \n  const mintTokens = async () => {\n    if (!tokenContract || !signer || !mintAmount) {\n      setError(\"Please connect your wallet and enter an amount to mint\");\n      return;\n    }\n    \n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    \n    try {\n      // Convert the amount to a string first to avoid BigNumber issues\n      const amountStr = mintAmount.toString();\n      const amount = ethers.utils.parseEther(amountStr);\n      const userAddress = await signer.getAddress();\n      \n      // Call the mint function which mints tokens to the caller's address\n      // Use the string representation of the amount to avoid BigNumber issues\n      const tx = await tokenContract.mint(amount.toString());\n      await tx.wait();\n      \n      // Update balance\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      \n      setSuccessMessage(`Successfully minted ${mintAmount} ${tokenSymbol} tokens!`);\n      setMintAmount('');\n      setShowConfetti(true);\n      setTimeout(() => setShowConfetti(false), 5000);\n    } catch (error) {\n      console.error(\"Error minting tokens:\", error);\n      setError(\"Failed to mint tokens: \" + (error.message || \"Unknown error\"));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  const transferTokens = async () => {\n    if (!tokenContract || !signer || !transferTo || !transferAmount) {\n      setError(\"Please connect your wallet, enter a recipient address, and an amount to transfer\");\n      return;\n    }\n    \n    // Check if user is trying to transfer to their own address\n    const userAddress = await signer.getAddress();\n    if (transferTo.toLowerCase() === userAddress.toLowerCase()) {\n      setError(\"You cannot transfer tokens to your own wallet address\");\n      return;\n    }\n    \n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    \n    try {\n      // Convert the amount to a string first to avoid BigNumber issues\n      const amountStr = transferAmount.toString();\n      const amount = ethers.utils.parseEther(amountStr);\n      \n      // Call the transfer function with string representation of amount\n      const tx = await tokenContract.transfer(transferTo, amount.toString());\n      await tx.wait();\n      \n      // Update balance\n      const userAddress = await signer.getAddress();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      \n      setSuccessMessage(`Successfully transferred ${transferAmount} ${tokenSymbol} tokens to ${transferTo}!`);\n      setTransferTo('');\n      setTransferAmount('');\n    } catch (error) {\n      console.error(\"Error transferring tokens:\", error);\n      setError(\"Failed to transfer tokens: \" + (error.message || \"Unknown error\"));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleMintSubmit = (e) => {\n    e.preventDefault();\n    mintTokens();\n  };\n\n  const handleTransferSubmit = (e) => {\n    e.preventDefault();\n    transferTokens();\n  };\n\n  // Initialize provider on component mount\n  useEffect(() => {\n    const checkIfMetaMaskIsInstalled = () => {\n      const { ethereum } = window;\n      return Boolean(ethereum && ethereum.isMetaMask);\n    };\n    \n    const initProvider = async () => {\n      // Wait for window.ethereum to be injected\n      if (!checkIfMetaMaskIsInstalled()) {\n        setError(\"Please install MetaMask to use this dApp\");\n        return;\n      }\n      \n      // Make sure ethereum object is fully loaded\n      if (window.ethereum) {\n        try {\n          // Check if we need to switch to Arbitrum Sepolia network\n          try {\n            const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n            const chainIdNum = parseInt(chainId, 16);\n            \n            if (chainIdNum !== CONFIG.CHAIN_ID_NUM) {\n              setError(`Please switch to Arbitrum Sepolia network in your MetaMask wallet. Current network ID: ${chainIdNum}`);\n              \n              // We'll still try to switch, but won't block the app if it fails\n              try {\n                // Try to switch to Arbitrum Sepolia\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{ chainId: CONFIG.NETWORK.chainId }],\n                });\n                // Clear the error if successful\n                setError('');\n              } catch (switchError) {\n                // This error code indicates that the chain has not been added to MetaMask\n                if (switchError.code === 4902) {\n                  try {\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [CONFIG.NETWORK],\n                    });\n                    // Clear the error if successful\n                    setError('');\n                  } catch (addError) {\n                    console.error(\"Error adding network:\", addError);\n                    setError(\"Please manually add Arbitrum Sepolia network to MetaMask\");\n                  }\n                } else {\n                  console.error(\"Error switching network:\", switchError);\n                  // We already set an error above, so no need to update it here\n                }\n              }\n            }\n          } catch (chainError) {\n            console.error(\"Error checking chain ID:\", chainError);\n            // Continue anyway, we'll just show a warning\n          }\n          \n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          setProvider(web3Provider);\n          \n          // Get accounts\n          const accounts = await web3Provider.listAccounts();\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            const signer = web3Provider.getSigner();\n            setSigner(signer);\n            \n            // Initialize contract\n            await initContract(signer);\n          }\n          \n          // Listen for account changes\n          window.ethereum.on('accountsChanged', (accounts) => {\n            if (accounts.length > 0) {\n              setAccount(accounts[0]);\n              const signer = web3Provider.getSigner();\n              setSigner(signer);\n              initContract(signer);\n            } else {\n              setAccount('');\n              setSigner(null);\n              setTokenContract(null);\n              setBalance('0');\n            }\n          });\n          \n          // Listen for chain changes\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n        } catch (error) {\n          console.error(\"Error initializing provider:\", error);\n          setError(\"Failed to connect to Ethereum provider\");\n        }\n      } else {\n        setError(\"Please install MetaMask to use this dApp\");\n      }\n    };\n    \n    initProvider();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {showConfetti && <Confetti />}\n      \n      <header className=\"App-header\">\n        <h1>🍭 Candy Token Dashboard 🍬</h1>\n        <p>Interact with your sweet ERC20 token on Arbitrum Sepolia!</p>\n      </header>\n      \n      <main>\n        <ConnectWallet \n          account={account} \n          connectWallet={connectWallet} \n        />\n        \n        {error && <div className=\"error-message\">{error}</div>}\n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\n        \n        {account ? (\n          <div className=\"token-container\">\n            <div className=\"token-info\">\n              <h2>🍬 {tokenName} ({tokenSymbol})</h2>\n              <p className=\"contract-address\">Contract Address: {CONFIG.CONTRACT_ADDRESS}</p>\n              <p className=\"balance\">Your Balance: {balance} {tokenSymbol}</p>\n            </div>\n            \n            <div className=\"token-actions\">\n              <div className=\"action-card\">\n                <h3>Mint Tokens</h3>\n                <p className=\"note\">Mint your own CandyToken tokens!</p>\n                <form onSubmit={handleMintSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"mintAmount\">Amount to Mint:</label>\n                    <input\n                      type=\"text\"\n                      id=\"mintAmount\"\n                      value={mintAmount}\n                      onChange={(e) => setMintAmount(e.target.value)}\n                      placeholder=\"Enter amount\"\n                      required\n                    />\n                  </div>\n                  <button \n                    type=\"submit\" \n                    className=\"action-button\"\n                    disabled={isProcessing}\n                  >\n                    {isProcessing ? 'Processing...' : 'Mint Tokens'}\n                  </button>\n                </form>\n              </div>\n              \n              <div className=\"action-card\">\n                <h3>Transfer Tokens</h3>\n                <form onSubmit={handleTransferSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"transferTo\">Recipient Address:</label>\n                    <input\n                      type=\"text\"\n                      id=\"transferTo\"\n                      value={transferTo}\n                      onChange={(e) => setTransferTo(e.target.value)}\n                      placeholder=\"0x...\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"transferAmount\">Amount to Transfer:</label>\n                    <input\n                      type=\"text\"\n                      id=\"transferAmount\"\n                      value={transferAmount}\n                      onChange={(e) => setTransferAmount(e.target.value)}\n                      placeholder=\"Enter amount\"\n                      required\n                    />\n                  </div>\n                  <button \n                    type=\"submit\" \n                    className=\"action-button\"\n                    disabled={isProcessing}\n                  >\n                    {isProcessing ? 'Processing...' : 'Transfer Tokens'}\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <CandyMachine isProcessing={isProcessing} />\n        )}\n      </main>\n      \n      <footer>\n        <p>Built with ❤️ on Arbitrum Stylus by Web3Compass Team</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}