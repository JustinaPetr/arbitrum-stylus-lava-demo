{"ast":null,"code":"var _jsxFileName = \"/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/example-token-app/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport ConnectWallet from './components/ConnectWallet';\nimport MyTokenABI from './contracts/MyToken.json';\nimport { CONFIG } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _netStatus$chainId, _netStatus$blockNumbe, _lastTxReceipt$gasUse, _lastTxReceipt$gasUse2;\n  const [account, setAccount] = useState('');\n  const [signer, setSigner] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [tokenName, setTokenName] = useState('Token');\n  const [tokenSymbol, setTokenSymbol] = useState('TKN');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mintAmount, setMintAmount] = useState('');\n  const [transferTo, setTransferTo] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Lava read-only provider + network status\n  const [lavaProvider, setLavaProvider] = useState(null);\n  const [netStatus, setNetStatus] = useState({\n    chainId: null,\n    blockNumber: null,\n    gasPriceGwei: null,\n    blockHash: null\n  });\n  const [netUpdatedAt, setNetUpdatedAt] = useState(null);\n  const [netOpen, setNetOpen] = useState(false); // collapsed/expanded toggle\n\n  // Last transaction receipt (shown after mint/transfer)\n  const [lastTxReceipt, setLastTxReceipt] = useState(null);\n\n  // --- Helpers ---\n  const isValidAmount = val => {\n    if (typeof val !== 'string') return false;\n    const trimmed = val.trim();\n    if (trimmed === '') return false;\n    // up to 18 decimals for ERC-20 with 18 decimals\n    return /^\\d+(?:\\.\\d{1,18})?$/.test(trimmed);\n  };\n  const shortAddress = addr => addr ? `${addr.slice(0, 6)}…${addr.slice(-4)}` : '';\n  const formatTxFeeEth = receipt => {\n    try {\n      var _receipt$effectiveGas;\n      if (!receipt) return null;\n      const gasUsed = receipt.gasUsed;\n      const effGasPrice = (_receipt$effectiveGas = receipt.effectiveGasPrice) !== null && _receipt$effectiveGas !== void 0 ? _receipt$effectiveGas : receipt.gasPrice;\n      if (!gasUsed || !effGasPrice) return null;\n      const feeWei = gasUsed.mul(effGasPrice);\n      return ethers.utils.formatEther(feeWei);\n    } catch {\n      return null;\n    }\n  };\n\n  // Initialize contract with signer\n  const initContract = async activeSigner => {\n    try {\n      const contract = new ethers.Contract(CONFIG.CONTRACT_ADDRESS, MyTokenABI, activeSigner);\n      setTokenContract(contract);\n      const [name, symbol] = await Promise.all([contract.name(), contract.symbol()]);\n      setTokenName(name);\n      setTokenSymbol(symbol);\n      const userAddress = await activeSigner.getAddress();\n      const userBalance = await contract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(userBalance));\n    } catch (e) {\n      console.error('Error initializing contract:', e);\n      setError('Failed to connect to the token contract.');\n    }\n  };\n\n  // Connect wallet\n  const connectWallet = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum || !ethereum.isMetaMask) {\n      setError('Please install MetaMask to use this application.');\n      return;\n    }\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      const nextSigner = web3Provider.getSigner();\n      setSigner(nextSigner);\n      await initContract(nextSigner);\n      setError('');\n    } catch (e) {\n      console.error('Error connecting wallet:', e);\n      setError('Failed to connect wallet.');\n    }\n  };\n  const mintTokens = async () => {\n    if (!tokenContract || !signer || !isValidAmount(mintAmount)) {\n      setError('Enter a valid mint amount and ensure your wallet is connected.');\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    setLastTxReceipt(null);\n    try {\n      const amount = ethers.utils.parseEther(mintAmount.trim());\n      const tx = await tokenContract.mint(amount.toString());\n      const mined = await tx.wait();\n\n      // Fetch full receipt from Lava RPC if available, otherwise use wallet's receipt\n      const lavaReceipt = lavaProvider ? await lavaProvider.getTransactionReceipt(tx.hash) : null;\n      setLastTxReceipt(lavaReceipt || mined);\n      const userAddress = await signer.getAddress();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      setSuccessMessage(`Minted ${mintAmount} ${tokenSymbol}.`);\n      setMintAmount('');\n    } catch (e) {\n      console.error('Error minting tokens:', e);\n      setError(`Failed to mint tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const transferTokens = async () => {\n    if (!tokenContract || !signer || !transferTo || !isValidAmount(transferAmount)) {\n      setError('Provide a valid recipient address and amount, and connect your wallet.');\n      return;\n    }\n    const userAddress = await signer.getAddress();\n    if (transferTo.toLowerCase() === userAddress.toLowerCase()) {\n      setError('You cannot transfer tokens to your own address.');\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    setLastTxReceipt(null);\n    try {\n      const amount = ethers.utils.parseEther(transferAmount.trim());\n      const tx = await tokenContract.transfer(transferTo, amount.toString());\n      const mined = await tx.wait();\n      const lavaReceipt = lavaProvider ? await lavaProvider.getTransactionReceipt(tx.hash) : null;\n      setLastTxReceipt(lavaReceipt || mined);\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      setSuccessMessage(`Transferred ${transferAmount} ${tokenSymbol} to ${shortAddress(transferTo)}.`);\n      setTransferTo('');\n      setTransferAmount('');\n    } catch (e) {\n      console.error('Error transferring tokens:', e);\n      setError(`Failed to transfer tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleMintSubmit = e => {\n    e.preventDefault();\n    mintTokens();\n  };\n  const handleTransferSubmit = e => {\n    e.preventDefault();\n    transferTokens();\n  };\n\n  // Initialize providers on mount\n  useEffect(() => {\n    // Set up a read-only Lava provider to showcase RPC reads\n    try {\n      var _CONFIG$NETWORK, _CONFIG$NETWORK$rpcUr;\n      const lavaUrl = (_CONFIG$NETWORK = CONFIG.NETWORK) === null || _CONFIG$NETWORK === void 0 ? void 0 : (_CONFIG$NETWORK$rpcUr = _CONFIG$NETWORK.rpcUrls) === null || _CONFIG$NETWORK$rpcUr === void 0 ? void 0 : _CONFIG$NETWORK$rpcUr[0];\n      if (lavaUrl) {\n        const lp = new ethers.providers.JsonRpcProvider(lavaUrl);\n        setLavaProvider(lp);\n      }\n    } catch (e) {\n      console.error('Error creating Lava provider:', e);\n    }\n    const checkIfMetaMaskIsInstalled = () => {\n      const {\n        ethereum\n      } = window;\n      return Boolean(ethereum && ethereum.isMetaMask);\n    };\n    const initProvider = async () => {\n      if (!checkIfMetaMaskIsInstalled()) {\n        setError('Please install MetaMask to use this application.');\n        return;\n      }\n      if (window.ethereum) {\n        try {\n          // Network guard (Arbitrum Sepolia by default from CONFIG)\n          try {\n            const chainId = await window.ethereum.request({\n              method: 'eth_chainId'\n            });\n            const chainIdNum = parseInt(chainId, 16);\n            if (chainIdNum !== CONFIG.CHAIN_ID_NUM) {\n              setError(`Switch to the correct network. Current chain ID: ${chainIdNum}`);\n              try {\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{\n                    chainId: CONFIG.NETWORK.chainId\n                  }]\n                });\n                setError('');\n              } catch (switchError) {\n                if (switchError.code === 4902) {\n                  try {\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [CONFIG.NETWORK]\n                    });\n                    setError('');\n                  } catch (addError) {\n                    console.error('Error adding network:', addError);\n                    setError('Add the target network to MetaMask to continue.');\n                  }\n                } else {\n                  console.error('Error switching network:', switchError);\n                }\n              }\n            }\n          } catch (chainError) {\n            console.error('Error checking chain ID:', chainError);\n          }\n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          setProvider(web3Provider);\n          const accounts = await web3Provider.listAccounts();\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            const nextSigner = web3Provider.getSigner();\n            setSigner(nextSigner);\n            await initContract(nextSigner);\n          }\n          window.ethereum.on('accountsChanged', accounts => {\n            if (accounts.length > 0) {\n              setAccount(accounts[0]);\n              const s = web3Provider.getSigner();\n              setSigner(s);\n              initContract(s);\n            } else {\n              setAccount('');\n              setSigner(null);\n              setTokenContract(null);\n              setBalance('0');\n            }\n          });\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n        } catch (e) {\n          console.error('Error initializing provider:', e);\n          setError('Failed to connect to the Ethereum provider.');\n        }\n      } else {\n        setError('Please install MetaMask to use this application.');\n      }\n    };\n    initProvider();\n  }, []);\n\n  // Poll live network status from Lava RPC (5s)\n  useEffect(() => {\n    if (!lavaProvider) return;\n    let isStale = false;\n    let intervalId;\n    const fetchStatus = async () => {\n      try {\n        const [network, blockNumber, gasPrice] = await Promise.all([lavaProvider.getNetwork(), lavaProvider.getBlockNumber(), lavaProvider.getGasPrice()]);\n        const block = await lavaProvider.getBlock(blockNumber);\n        if (isStale) return;\n        setNetStatus({\n          chainId: network.chainId,\n          blockNumber,\n          gasPriceGwei: Number(ethers.utils.formatUnits(gasPrice, 'gwei')).toFixed(2),\n          blockHash: (block === null || block === void 0 ? void 0 : block.hash) || null\n        });\n        setNetUpdatedAt(new Date());\n      } catch (e) {\n        console.error('Error fetching network status from Lava:', e);\n      }\n    };\n    fetchStatus();\n    intervalId = setInterval(fetchStatus, 5000);\n    return () => {\n      isStale = true;\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [lavaProvider]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Token Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: [\"Interact with your ERC-20 on \", CONFIG.NETWORK.chainName || 'the configured network', \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"toolbar\",\n        children: /*#__PURE__*/_jsxDEV(ConnectWallet, {\n          account: account,\n          connectWallet: connectWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"status\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 28\n      }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: [tokenName, \" (\", tokenSymbol, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: shortAddress(CONFIG.CONTRACT_ADDRESS)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: shortAddress(account)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: [balance, \" \", tokenSymbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Mint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleMintSubmit,\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mintAmount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"mintAmount\",\n                value: mintAmount,\n                onChange: e => setMintAmount(e.target.value),\n                placeholder: \"e.g. 100.0\",\n                inputMode: \"decimal\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              disabled: isProcessing,\n              children: isProcessing ? 'Processing…' : 'Mint'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTransferSubmit,\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"transferTo\",\n                children: \"Recipient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"transferTo\",\n                value: transferTo,\n                onChange: e => setTransferTo(e.target.value),\n                placeholder: \"0x\\u2026\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"transferAmount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"transferAmount\",\n                value: transferAmount,\n                onChange: e => setTransferAmount(e.target.value),\n                placeholder: \"e.g. 25\",\n                inputMode: \"decimal\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              disabled: isProcessing,\n              children: isProcessing ? 'Processing…' : 'Transfer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"action-button\",\n            style: {\n              width: '100%'\n            },\n            onClick: () => setNetOpen(v => !v),\n            \"aria-expanded\": netOpen,\n            \"aria-controls\": \"lava-net-status\",\n            children: netOpen ? 'Hide Network Status (Lava RPC Live)' : 'Show Network Status (Lava RPC Live)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), netOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"lava-net-status\",\n            className: \"meta\",\n            style: {\n              marginTop: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Chain ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: (_netStatus$chainId = netStatus.chainId) !== null && _netStatus$chainId !== void 0 ? _netStatus$chainId : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Block #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: (_netStatus$blockNumbe = netStatus.blockNumber) !== null && _netStatus$blockNumbe !== void 0 ? _netStatus$blockNumbe : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Gas Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: netStatus.gasPriceGwei ? `${netStatus.gasPriceGwei} Gwei` : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Block Hash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: netStatus.blockHash ? shortAddress(netStatus.blockHash) : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Last Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: netUpdatedAt ? netUpdatedAt.toLocaleTimeString() : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), lastTxReceipt && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Last Transaction Receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Tx Hash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: shortAddress(lastTxReceipt.transactionHash)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Block\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: lastTxReceipt.blockNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Gas Used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: ((_lastTxReceipt$gasUse = lastTxReceipt.gasUsed) === null || _lastTxReceipt$gasUse === void 0 ? void 0 : (_lastTxReceipt$gasUse2 = _lastTxReceipt$gasUse.toString) === null || _lastTxReceipt$gasUse2 === void 0 ? void 0 : _lastTxReceipt$gasUse2.call(_lastTxReceipt$gasUse)) || '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Fee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: formatTxFeeEth(lastTxReceipt) ? `${formatTxFeeEth(lastTxReceipt)} ETH` : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: lastTxReceipt.status === 1 ? '✅ Success' : '❌ Failed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"Wallet not connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connect your wallet to view your balance and manage tokens.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Built on \", CONFIG.NETWORK.chainName || 'configured network', \" \\u2022 Powered by Lava RPC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q5Ld24VHsatTAl5A5LXxlZfygDM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","ConnectWallet","MyTokenABI","CONFIG","jsxDEV","_jsxDEV","App","_s","_netStatus$chainId","_netStatus$blockNumbe","_lastTxReceipt$gasUse","_lastTxReceipt$gasUse2","account","setAccount","signer","setSigner","tokenContract","setTokenContract","tokenName","setTokenName","tokenSymbol","setTokenSymbol","isProcessing","setIsProcessing","mintAmount","setMintAmount","transferTo","setTransferTo","transferAmount","setTransferAmount","balance","setBalance","error","setError","successMessage","setSuccessMessage","lavaProvider","setLavaProvider","netStatus","setNetStatus","chainId","blockNumber","gasPriceGwei","blockHash","netUpdatedAt","setNetUpdatedAt","netOpen","setNetOpen","lastTxReceipt","setLastTxReceipt","isValidAmount","val","trimmed","trim","test","shortAddress","addr","slice","formatTxFeeEth","receipt","_receipt$effectiveGas","gasUsed","effGasPrice","effectiveGasPrice","gasPrice","feeWei","mul","utils","formatEther","initContract","activeSigner","contract","Contract","CONTRACT_ADDRESS","name","symbol","Promise","all","userAddress","getAddress","userBalance","balanceOf","e","console","connectWallet","ethereum","window","isMetaMask","web3Provider","providers","Web3Provider","setProvider","accounts","request","method","nextSigner","getSigner","mintTokens","amount","parseEther","tx","mint","toString","mined","wait","lavaReceipt","getTransactionReceipt","hash","newBalance","message","transferTokens","toLowerCase","transfer","handleMintSubmit","preventDefault","handleTransferSubmit","_CONFIG$NETWORK","_CONFIG$NETWORK$rpcUr","lavaUrl","NETWORK","rpcUrls","lp","JsonRpcProvider","checkIfMetaMaskIsInstalled","Boolean","initProvider","chainIdNum","parseInt","CHAIN_ID_NUM","params","switchError","code","addError","chainError","listAccounts","length","on","s","location","reload","isStale","intervalId","fetchStatus","network","getNetwork","getBlockNumber","getGasPrice","block","getBlock","Number","formatUnits","toFixed","Date","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chainName","role","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","inputMode","autoComplete","required","disabled","style","width","onClick","v","marginTop","toLocaleTimeString","transactionHash","call","status","_c","$RefreshReg$"],"sources":["/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/example-token-app/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport ConnectWallet from './components/ConnectWallet';\nimport MyTokenABI from './contracts/MyToken.json';\nimport { CONFIG } from './config';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [signer, setSigner] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [tokenName, setTokenName] = useState('Token');\n  const [tokenSymbol, setTokenSymbol] = useState('TKN');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mintAmount, setMintAmount] = useState('');\n  const [transferTo, setTransferTo] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Lava read-only provider + network status\n  const [lavaProvider, setLavaProvider] = useState(null);\n  const [netStatus, setNetStatus] = useState({\n    chainId: null,\n    blockNumber: null,\n    gasPriceGwei: null,\n    blockHash: null,\n  });\n  const [netUpdatedAt, setNetUpdatedAt] = useState(null);\n  const [netOpen, setNetOpen] = useState(false); // collapsed/expanded toggle\n\n  // Last transaction receipt (shown after mint/transfer)\n  const [lastTxReceipt, setLastTxReceipt] = useState(null);\n\n  // --- Helpers ---\n  const isValidAmount = (val) => {\n    if (typeof val !== 'string') return false;\n    const trimmed = val.trim();\n    if (trimmed === '') return false;\n    // up to 18 decimals for ERC-20 with 18 decimals\n    return /^\\d+(?:\\.\\d{1,18})?$/.test(trimmed);\n  };\n\n  const shortAddress = (addr) => (addr ? `${addr.slice(0, 6)}…${addr.slice(-4)}` : '');\n\n  const formatTxFeeEth = (receipt) => {\n    try {\n      if (!receipt) return null;\n      const gasUsed = receipt.gasUsed;\n      const effGasPrice = receipt.effectiveGasPrice ?? receipt.gasPrice;\n      if (!gasUsed || !effGasPrice) return null;\n      const feeWei = gasUsed.mul(effGasPrice);\n      return ethers.utils.formatEther(feeWei);\n    } catch {\n      return null;\n    }\n  };\n\n  // Initialize contract with signer\n  const initContract = async (activeSigner) => {\n    try {\n      const contract = new ethers.Contract(\n        CONFIG.CONTRACT_ADDRESS,\n        MyTokenABI,\n        activeSigner\n      );\n      setTokenContract(contract);\n\n      const [name, symbol] = await Promise.all([contract.name(), contract.symbol()]);\n      setTokenName(name);\n      setTokenSymbol(symbol);\n\n      const userAddress = await activeSigner.getAddress();\n      const userBalance = await contract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(userBalance));\n    } catch (e) {\n      console.error('Error initializing contract:', e);\n      setError('Failed to connect to the token contract.');\n    }\n  };\n\n  // Connect wallet\n  const connectWallet = async () => {\n    const { ethereum } = window;\n    if (!ethereum || !ethereum.isMetaMask) {\n      setError('Please install MetaMask to use this application.');\n      return;\n    }\n\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      const nextSigner = web3Provider.getSigner();\n      setSigner(nextSigner);\n\n      await initContract(nextSigner);\n      setError('');\n    } catch (e) {\n      console.error('Error connecting wallet:', e);\n      setError('Failed to connect wallet.');\n    }\n  };\n\n  const mintTokens = async () => {\n    if (!tokenContract || !signer || !isValidAmount(mintAmount)) {\n      setError('Enter a valid mint amount and ensure your wallet is connected.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    setLastTxReceipt(null);\n\n    try {\n      const amount = ethers.utils.parseEther(mintAmount.trim());\n      const tx = await tokenContract.mint(amount.toString());\n      const mined = await tx.wait();\n\n      // Fetch full receipt from Lava RPC if available, otherwise use wallet's receipt\n      const lavaReceipt = lavaProvider ? await lavaProvider.getTransactionReceipt(tx.hash) : null;\n      setLastTxReceipt(lavaReceipt || mined);\n\n      const userAddress = await signer.getAddress();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n\n      setSuccessMessage(`Minted ${mintAmount} ${tokenSymbol}.`);\n      setMintAmount('');\n    } catch (e) {\n      console.error('Error minting tokens:', e);\n      setError(`Failed to mint tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const transferTokens = async () => {\n    if (!tokenContract || !signer || !transferTo || !isValidAmount(transferAmount)) {\n      setError('Provide a valid recipient address and amount, and connect your wallet.');\n      return;\n    }\n\n    const userAddress = await signer.getAddress();\n    if (transferTo.toLowerCase() === userAddress.toLowerCase()) {\n      setError('You cannot transfer tokens to your own address.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    setLastTxReceipt(null);\n\n    try {\n      const amount = ethers.utils.parseEther(transferAmount.trim());\n      const tx = await tokenContract.transfer(transferTo, amount.toString());\n      const mined = await tx.wait();\n\n      const lavaReceipt = lavaProvider ? await lavaProvider.getTransactionReceipt(tx.hash) : null;\n      setLastTxReceipt(lavaReceipt || mined);\n\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n\n      setSuccessMessage(`Transferred ${transferAmount} ${tokenSymbol} to ${shortAddress(transferTo)}.`);\n      setTransferTo('');\n      setTransferAmount('');\n    } catch (e) {\n      console.error('Error transferring tokens:', e);\n      setError(`Failed to transfer tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleMintSubmit = (e) => {\n    e.preventDefault();\n    mintTokens();\n  };\n\n  const handleTransferSubmit = (e) => {\n    e.preventDefault();\n    transferTokens();\n  };\n\n  // Initialize providers on mount\n  useEffect(() => {\n    // Set up a read-only Lava provider to showcase RPC reads\n    try {\n      const lavaUrl = CONFIG.NETWORK?.rpcUrls?.[0];\n      if (lavaUrl) {\n        const lp = new ethers.providers.JsonRpcProvider(lavaUrl);\n        setLavaProvider(lp);\n      }\n    } catch (e) {\n      console.error('Error creating Lava provider:', e);\n    }\n\n    const checkIfMetaMaskIsInstalled = () => {\n      const { ethereum } = window;\n      return Boolean(ethereum && ethereum.isMetaMask);\n    };\n\n    const initProvider = async () => {\n      if (!checkIfMetaMaskIsInstalled()) {\n        setError('Please install MetaMask to use this application.');\n        return;\n      }\n\n      if (window.ethereum) {\n        try {\n          // Network guard (Arbitrum Sepolia by default from CONFIG)\n          try {\n            const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n            const chainIdNum = parseInt(chainId, 16);\n\n            if (chainIdNum !== CONFIG.CHAIN_ID_NUM) {\n              setError(`Switch to the correct network. Current chain ID: ${chainIdNum}`);\n              try {\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{ chainId: CONFIG.NETWORK.chainId }],\n                });\n                setError('');\n              } catch (switchError) {\n                if (switchError.code === 4902) {\n                  try {\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [CONFIG.NETWORK],\n                    });\n                    setError('');\n                  } catch (addError) {\n                    console.error('Error adding network:', addError);\n                    setError('Add the target network to MetaMask to continue.');\n                  }\n                } else {\n                  console.error('Error switching network:', switchError);\n                }\n              }\n            }\n          } catch (chainError) {\n            console.error('Error checking chain ID:', chainError);\n          }\n\n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          setProvider(web3Provider);\n\n          const accounts = await web3Provider.listAccounts();\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            const nextSigner = web3Provider.getSigner();\n            setSigner(nextSigner);\n            await initContract(nextSigner);\n          }\n\n          window.ethereum.on('accountsChanged', (accounts) => {\n            if (accounts.length > 0) {\n              setAccount(accounts[0]);\n              const s = web3Provider.getSigner();\n              setSigner(s);\n              initContract(s);\n            } else {\n              setAccount('');\n              setSigner(null);\n              setTokenContract(null);\n              setBalance('0');\n            }\n          });\n\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n        } catch (e) {\n          console.error('Error initializing provider:', e);\n          setError('Failed to connect to the Ethereum provider.');\n        }\n      } else {\n        setError('Please install MetaMask to use this application.');\n      }\n    };\n\n    initProvider();\n  }, []);\n\n  // Poll live network status from Lava RPC (5s)\n  useEffect(() => {\n    if (!lavaProvider) return;\n\n    let isStale = false;\n    let intervalId;\n\n    const fetchStatus = async () => {\n      try {\n        const [network, blockNumber, gasPrice] = await Promise.all([\n          lavaProvider.getNetwork(),\n          lavaProvider.getBlockNumber(),\n          lavaProvider.getGasPrice(),\n        ]);\n        const block = await lavaProvider.getBlock(blockNumber);\n        if (isStale) return;\n        setNetStatus({\n          chainId: network.chainId,\n          blockNumber,\n          gasPriceGwei: Number(ethers.utils.formatUnits(gasPrice, 'gwei')).toFixed(2),\n          blockHash: block?.hash || null,\n        });\n        setNetUpdatedAt(new Date());\n      } catch (e) {\n        console.error('Error fetching network status from Lava:', e);\n      }\n    };\n\n    fetchStatus();\n    intervalId = setInterval(fetchStatus, 5_000);\n\n    return () => {\n      isStale = true;\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [lavaProvider]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <div className=\"container\">\n          <h1 className=\"title\">Token Dashboard</h1>\n          <p className=\"subtitle\">Interact with your ERC-20 on {CONFIG.NETWORK.chainName || 'the configured network'}.</p>\n        </div>\n      </header>\n\n      <main className=\"container\">\n        <section className=\"toolbar\">\n          <ConnectWallet account={account} connectWallet={connectWallet} />\n        </section>\n\n        {error && <div className=\"alert alert-error\" role=\"alert\">{error}</div>}\n        {successMessage && <div className=\"alert alert-success\" role=\"status\">{successMessage}</div>}\n\n        {account ? (\n          <div className=\"grid\">\n            <div className=\"card\">\n              <h2 className=\"card-title\">{tokenName} ({tokenSymbol})</h2>\n              <div className=\"meta\">\n                <div className=\"meta-row\">\n                  <span className=\"label\">Contract</span>\n                  <span className=\"value monospace\">{shortAddress(CONFIG.CONTRACT_ADDRESS)}</span>\n                </div>\n                <div className=\"meta-row\">\n                  <span className=\"label\">Account</span>\n                  <span className=\"value monospace\">{shortAddress(account)}</span>\n                </div>\n                <div className=\"meta-row\">\n                  <span className=\"label\">Balance</span>\n                  <span className=\"value\">{balance} {tokenSymbol}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <h3 className=\"card-title\">Mint</h3>\n              <form onSubmit={handleMintSubmit} className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"mintAmount\">Amount</label>\n                  <input\n                    type=\"text\"\n                    id=\"mintAmount\"\n                    value={mintAmount}\n                    onChange={(e) => setMintAmount(e.target.value)}\n                    placeholder=\"e.g. 100.0\"\n                    inputMode=\"decimal\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn\" disabled={isProcessing}>\n                  {isProcessing ? 'Processing…' : 'Mint'}\n                </button>\n              </form>\n            </div>\n\n            <div className=\"card\">\n              <h3 className=\"card-title\">Transfer</h3>\n              <form onSubmit={handleTransferSubmit} className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"transferTo\">Recipient</label>\n                  <input\n                    type=\"text\"\n                    id=\"transferTo\"\n                    value={transferTo}\n                    onChange={(e) => setTransferTo(e.target.value)}\n                    placeholder=\"0x…\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"transferAmount\">Amount</label>\n                  <input\n                    type=\"text\"\n                    id=\"transferAmount\"\n                    value={transferAmount}\n                    onChange={(e) => setTransferAmount(e.target.value)}\n                    placeholder=\"e.g. 25\"\n                    inputMode=\"decimal\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn\" disabled={isProcessing}>\n                  {isProcessing ? 'Processing…' : 'Transfer'}\n                </button>\n              </form>\n            </div>\n\n            {/* Expandable Network Status (via Lava RPC) */}\n            <div className=\"card\">\n              <button\n                type=\"button\"\n                className=\"action-button\"\n                style={{ width: '100%' }}\n                onClick={() => setNetOpen((v) => !v)}\n                aria-expanded={netOpen}\n                aria-controls=\"lava-net-status\"\n              >\n                {netOpen ? 'Hide Network Status (Lava RPC Live)' : 'Show Network Status (Lava RPC Live)'}\n              </button>\n\n              {netOpen && (\n                <div id=\"lava-net-status\" className=\"meta\" style={{ marginTop: 12 }}>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Chain ID</span>\n                    <span className=\"value monospace\">{netStatus.chainId ?? '—'}</span>\n                  </div>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Block #</span>\n                    <span className=\"value monospace\">{netStatus.blockNumber ?? '—'}</span>\n                  </div>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Gas Price</span>\n                    <span className=\"value\">{netStatus.gasPriceGwei ? `${netStatus.gasPriceGwei} Gwei` : '—'}</span>\n                  </div>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Block Hash</span>\n                    <span className=\"value monospace\">{netStatus.blockHash ? shortAddress(netStatus.blockHash) : '—'}</span>\n                  </div>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Last Updated</span>\n                    <span className=\"value\">{netUpdatedAt ? netUpdatedAt.toLocaleTimeString() : '—'}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {lastTxReceipt && (\n              <div className=\"card\">\n                <h3 className=\"card-title\">Last Transaction Receipt</h3>\n                <div className=\"meta\">\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Tx Hash</span>\n                    <span className=\"value monospace\">{shortAddress(lastTxReceipt.transactionHash)}</span>\n                  </div>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Block</span>\n                    <span className=\"value monospace\">{lastTxReceipt.blockNumber}</span>\n                  </div>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Gas Used</span>\n                    <span className=\"value\">{lastTxReceipt.gasUsed?.toString?.() || '—'}</span>\n                  </div>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Fee</span>\n                    <span className=\"value\">\n                      {formatTxFeeEth(lastTxReceipt) ? `${formatTxFeeEth(lastTxReceipt)} ETH` : '—'}\n                    </span>\n                  </div>\n                  <div className=\"meta-row\">\n                    <span className=\"label\">Status</span>\n                    <span className=\"value\">{lastTxReceipt.status === 1 ? '✅ Success' : '❌ Failed'}</span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"empty-state card\">\n            <h2 className=\"card-title\">Wallet not connected</h2>\n            <p>Connect your wallet to view your balance and manage tokens.</p>\n          </div>\n        )}\n      </main>\n\n      <footer className=\"app-footer\">\n        <div className=\"container\">\n          <p>Built on {CONFIG.NETWORK.chainName || 'configured network'} • Powered by Lava RPC</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}