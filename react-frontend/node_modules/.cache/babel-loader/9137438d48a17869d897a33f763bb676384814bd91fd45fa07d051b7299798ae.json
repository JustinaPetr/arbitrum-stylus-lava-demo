{"ast":null,"code":"var _jsxFileName = \"/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/mint-token-dapp/react-frontend/src/components/CandyMachine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandyMachine = ({\n  isDeploying\n}) => {\n  _s();\n  const [candies, setCandies] = useState([]);\n\n  // Generate random color for candy\n  const getRandomColor = () => {\n    const colors = ['#ff85a2', '#7ed6df', '#ffbe76', '#badc58', '#f9ca24', '#686de0'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  // Add candy animation when deploying\n  useEffect(() => {\n    if (isDeploying) {\n      const interval = setInterval(() => {\n        const newCandy = {\n          id: Date.now(),\n          color: getRandomColor(),\n          left: Math.random() * 240 + 30 // Random position within machine\n        };\n        setCandies(prev => [...prev, newCandy]);\n\n        // Remove candy after animation completes\n        setTimeout(() => {\n          setCandies(prev => prev.filter(candy => candy.id !== newCandy.id));\n        }, 1000);\n      }, 300);\n      return () => clearInterval(interval);\n    }\n  }, [isDeploying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"candy-machine\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"machine-top\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"machine-dome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"machine-body\",\n      children: [candies.map(candy => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"candy\",\n        style: {\n          backgroundColor: candy.color,\n          left: `${candy.left}px`\n        }\n      }, candy.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"machine-slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"machine-knob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"machine-base\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CandyMachine, \"ntD2FmQzjEEo1kRwPiMhjpYZezQ=\");\n_c = CandyMachine;\nexport default CandyMachine;\nvar _c;\n$RefreshReg$(_c, \"CandyMachine\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CandyMachine","isDeploying","_s","candies","setCandies","getRandomColor","colors","Math","floor","random","length","interval","setInterval","newCandy","id","Date","now","color","left","prev","setTimeout","filter","candy","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/mint-token-dapp/react-frontend/src/components/CandyMachine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CandyMachine = ({ isDeploying }) => {\n  const [candies, setCandies] = useState([]);\n  \n  // Generate random color for candy\n  const getRandomColor = () => {\n    const colors = ['#ff85a2', '#7ed6df', '#ffbe76', '#badc58', '#f9ca24', '#686de0'];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  \n  // Add candy animation when deploying\n  useEffect(() => {\n    if (isDeploying) {\n      const interval = setInterval(() => {\n        const newCandy = {\n          id: Date.now(),\n          color: getRandomColor(),\n          left: Math.random() * 240 + 30, // Random position within machine\n        };\n        \n        setCandies(prev => [...prev, newCandy]);\n        \n        // Remove candy after animation completes\n        setTimeout(() => {\n          setCandies(prev => prev.filter(candy => candy.id !== newCandy.id));\n        }, 1000);\n      }, 300);\n      \n      return () => clearInterval(interval);\n    }\n  }, [isDeploying]);\n  \n  return (\n    <div className=\"candy-machine\">\n      <div className=\"machine-top\">\n        <div className=\"machine-dome\"></div>\n      </div>\n      <div className=\"machine-body\">\n        {candies.map(candy => (\n          <div\n            key={candy.id}\n            className=\"candy\"\n            style={{\n              backgroundColor: candy.color,\n              left: `${candy.left}px`,\n            }}\n          ></div>\n        ))}\n        <div className=\"machine-slot\"></div>\n        <div className=\"machine-knob\"></div>\n      </div>\n      <div className=\"machine-base\"></div>\n    </div>\n  );\n};\n\nexport default CandyMachine;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}