{"ast":null,"code":"var _jsxFileName = \"/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/mint-token-dapp/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport ConnectWallet from './components/ConnectWallet';\nimport TokenForm from './components/TokenForm';\nimport CandyTokenABI from './contracts/CandyToken.json';\nimport { CONFIG } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [tokenName, setTokenName] = useState('Token');\n  const [tokenSymbol, setTokenSymbol] = useState('TKN');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mintAmount, setMintAmount] = useState('');\n  const [transferTo, setTransferTo] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // --- Helpers ---\n  const isValidAmount = val => {\n    if (typeof val !== 'string') return false;\n    const trimmed = val.trim();\n    if (trimmed === '') return false;\n    // up to 18 decimals for ERC-20 with 18 decimals\n    return /^\\d+(?:\\.\\d{1,18})?$/.test(trimmed);\n  };\n  const shortAddress = addr => addr ? `${addr.slice(0, 6)}â€¦${addr.slice(-4)}` : '';\n\n  // Initialize contract with signer\n  const initContract = async activeSigner => {\n    try {\n      const contract = new ethers.Contract(CONFIG.CONTRACT_ADDRESS, CandyTokenABI, activeSigner);\n      setTokenContract(contract);\n      const [name, symbol] = await Promise.all([contract.name(), contract.symbol()]);\n      setTokenName(name);\n      setTokenSymbol(symbol);\n      const userAddress = await activeSigner.getAddress();\n      const userBalance = await contract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(userBalance));\n    } catch (e) {\n      console.error('Error initializing contract:', e);\n      setError('Failed to connect to the token contract.');\n    }\n  };\n\n  // Connect wallet\n  const connectWallet = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum || !ethereum.isMetaMask) {\n      setError('Please install MetaMask to use this application.');\n      return;\n    }\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      const nextSigner = web3Provider.getSigner();\n      setSigner(nextSigner);\n      await initContract(nextSigner);\n      setError('');\n    } catch (e) {\n      console.error('Error connecting wallet:', e);\n      setError('Failed to connect wallet.');\n    }\n  };\n  const mintTokens = async () => {\n    if (!tokenContract || !signer || !isValidAmount(mintAmount)) {\n      setError('Enter a valid mint amount and ensure your wallet is connected.');\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      const amount = ethers.utils.parseEther(mintAmount.trim());\n      const tx = await tokenContract.mint(amount.toString());\n      await tx.wait();\n      const userAddress = await signer.getAddress();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      setSuccessMessage(`Minted ${mintAmount} ${tokenSymbol}.`);\n      setMintAmount('');\n    } catch (e) {\n      console.error('Error minting tokens:', e);\n      setError(`Failed to mint tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const transferTokens = async () => {\n    if (!tokenContract || !signer || !transferTo || !isValidAmount(transferAmount)) {\n      setError('Provide a valid recipient address and amount, and connect your wallet.');\n      return;\n    }\n    const userAddress = await signer.getAddress();\n    if (transferTo.toLowerCase() === userAddress.toLowerCase()) {\n      setError('You cannot transfer tokens to your own address.');\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      const amount = ethers.utils.parseEther(transferAmount.trim());\n      const tx = await tokenContract.transfer(transferTo, amount.toString());\n      await tx.wait();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n      setSuccessMessage(`Transferred ${transferAmount} ${tokenSymbol} to ${shortAddress(transferTo)}.`);\n      setTransferTo('');\n      setTransferAmount('');\n    } catch (e) {\n      console.error('Error transferring tokens:', e);\n      setError(`Failed to transfer tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleMintSubmit = e => {\n    e.preventDefault();\n    mintTokens();\n  };\n  const handleTransferSubmit = e => {\n    e.preventDefault();\n    transferTokens();\n  };\n\n  // Initialize provider on mount\n  useEffect(() => {\n    const checkIfMetaMaskIsInstalled = () => {\n      const {\n        ethereum\n      } = window;\n      return Boolean(ethereum && ethereum.isMetaMask);\n    };\n    const initProvider = async () => {\n      if (!checkIfMetaMaskIsInstalled()) {\n        setError('Please install MetaMask to use this application.');\n        return;\n      }\n      if (window.ethereum) {\n        try {\n          // Network guard (Arbitrum Sepolia by default from CONFIG)\n          try {\n            const chainId = await window.ethereum.request({\n              method: 'eth_chainId'\n            });\n            const chainIdNum = parseInt(chainId, 16);\n            if (chainIdNum !== CONFIG.CHAIN_ID_NUM) {\n              setError(`Switch to the correct network. Current chain ID: ${chainIdNum}`);\n              try {\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{\n                    chainId: CONFIG.NETWORK.chainId\n                  }]\n                });\n                setError('');\n              } catch (switchError) {\n                if (switchError.code === 4902) {\n                  try {\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [CONFIG.NETWORK]\n                    });\n                    setError('');\n                  } catch (addError) {\n                    console.error('Error adding network:', addError);\n                    setError('Add the target network to MetaMask to continue.');\n                  }\n                } else {\n                  console.error('Error switching network:', switchError);\n                }\n              }\n            }\n          } catch (chainError) {\n            console.error('Error checking chain ID:', chainError);\n          }\n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          setProvider(web3Provider);\n          const accounts = await web3Provider.listAccounts();\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            const nextSigner = web3Provider.getSigner();\n            setSigner(nextSigner);\n            await initContract(nextSigner);\n          }\n          window.ethereum.on('accountsChanged', accounts => {\n            if (accounts.length > 0) {\n              setAccount(accounts[0]);\n              const s = web3Provider.getSigner();\n              setSigner(s);\n              initContract(s);\n            } else {\n              setAccount('');\n              setSigner(null);\n              setTokenContract(null);\n              setBalance('0');\n            }\n          });\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n        } catch (e) {\n          console.error('Error initializing provider:', e);\n          setError('Failed to connect to the Ethereum provider.');\n        }\n      } else {\n        setError('Please install MetaMask to use this application.');\n      }\n    };\n    initProvider();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Token Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: [\"Interact with your ERC\\u201120 on \", CONFIG.NETWORK.chainName || 'the configured network', \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"toolbar\",\n        children: /*#__PURE__*/_jsxDEV(ConnectWallet, {\n          account: account,\n          connectWallet: connectWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"status\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 28\n      }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: [tokenName, \" (\", tokenSymbol, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: shortAddress(CONFIG.CONTRACT_ADDRESS)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 82\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value monospace\",\n                children: shortAddress(account)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 81\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: [balance, \" \", tokenSymbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 81\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Mint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleMintSubmit,\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mintAmount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"mintAmount\",\n                value: mintAmount,\n                onChange: e => setMintAmount(e.target.value),\n                placeholder: \"e.g. 100.0\",\n                inputMode: \"decimal\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              disabled: isProcessing,\n              children: isProcessing ? 'Processingâ€¦' : 'Mint'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Transfer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleTransferSubmit,\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"transferTo\",\n                children: \"Recipient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"transferTo\",\n                value: transferTo,\n                onChange: e => setTransferTo(e.target.value),\n                placeholder: \"0x\\u2026\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"transferAmount\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"transferAmount\",\n                value: transferAmount,\n                onChange: e => setTransferAmount(e.target.value),\n                placeholder: \"e.g. 25\",\n                inputMode: \"decimal\",\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              disabled: isProcessing,\n              children: isProcessing ? 'Processingâ€¦' : 'Transfer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"Wallet not connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connect your wallet to view your balance and manage tokens.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Built on \", CONFIG.NETWORK.chainName || 'configured network']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x6a00E9tzkw1B0KPL8qV9QS3tPM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","ConnectWallet","TokenForm","CandyTokenABI","CONFIG","jsxDEV","_jsxDEV","App","_s","account","setAccount","provider","setProvider","signer","setSigner","tokenContract","setTokenContract","tokenName","setTokenName","tokenSymbol","setTokenSymbol","isProcessing","setIsProcessing","mintAmount","setMintAmount","transferTo","setTransferTo","transferAmount","setTransferAmount","balance","setBalance","error","setError","successMessage","setSuccessMessage","isValidAmount","val","trimmed","trim","test","shortAddress","addr","slice","initContract","activeSigner","contract","Contract","CONTRACT_ADDRESS","name","symbol","Promise","all","userAddress","getAddress","userBalance","balanceOf","utils","formatEther","e","console","connectWallet","ethereum","window","isMetaMask","web3Provider","providers","Web3Provider","accounts","request","method","nextSigner","getSigner","mintTokens","amount","parseEther","tx","mint","toString","wait","newBalance","message","transferTokens","toLowerCase","transfer","handleMintSubmit","preventDefault","handleTransferSubmit","checkIfMetaMaskIsInstalled","Boolean","initProvider","chainId","chainIdNum","parseInt","CHAIN_ID_NUM","params","NETWORK","switchError","code","addError","chainError","listAccounts","length","on","s","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chainName","role","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","inputMode","autoComplete","required","disabled","_c","$RefreshReg$"],"sources":["/Users/justinapetraityte/Desktop/arbst/ArbitrumStylus_RUST/mint-token-dapp/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport ConnectWallet from './components/ConnectWallet';\nimport TokenForm from './components/TokenForm';\nimport CandyTokenABI from './contracts/CandyToken.json';\nimport { CONFIG } from './config';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [tokenContract, setTokenContract] = useState(null);\n  const [tokenName, setTokenName] = useState('Token');\n  const [tokenSymbol, setTokenSymbol] = useState('TKN');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [mintAmount, setMintAmount] = useState('');\n  const [transferTo, setTransferTo] = useState('');\n  const [transferAmount, setTransferAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // --- Helpers ---\n  const isValidAmount = (val) => {\n    if (typeof val !== 'string') return false;\n    const trimmed = val.trim();\n    if (trimmed === '') return false;\n    // up to 18 decimals for ERC-20 with 18 decimals\n    return /^\\d+(?:\\.\\d{1,18})?$/.test(trimmed);\n  };\n\n  const shortAddress = (addr) => (addr ? `${addr.slice(0, 6)}â€¦${addr.slice(-4)}` : '');\n\n  // Initialize contract with signer\n  const initContract = async (activeSigner) => {\n    try {\n      const contract = new ethers.Contract(\n        CONFIG.CONTRACT_ADDRESS,\n        CandyTokenABI,\n        activeSigner\n      );\n      setTokenContract(contract);\n\n      const [name, symbol] = await Promise.all([contract.name(), contract.symbol()]);\n      setTokenName(name);\n      setTokenSymbol(symbol);\n\n      const userAddress = await activeSigner.getAddress();\n      const userBalance = await contract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(userBalance));\n    } catch (e) {\n      console.error('Error initializing contract:', e);\n      setError('Failed to connect to the token contract.');\n    }\n  };\n\n  // Connect wallet\n  const connectWallet = async () => {\n    const { ethereum } = window;\n    if (!ethereum || !ethereum.isMetaMask) {\n      setError('Please install MetaMask to use this application.');\n      return;\n    }\n\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      const nextSigner = web3Provider.getSigner();\n      setSigner(nextSigner);\n\n      await initContract(nextSigner);\n      setError('');\n    } catch (e) {\n      console.error('Error connecting wallet:', e);\n      setError('Failed to connect wallet.');\n    }\n  };\n\n  const mintTokens = async () => {\n    if (!tokenContract || !signer || !isValidAmount(mintAmount)) {\n      setError('Enter a valid mint amount and ensure your wallet is connected.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n\n    try {\n      const amount = ethers.utils.parseEther(mintAmount.trim());\n      const tx = await tokenContract.mint(amount.toString());\n      await tx.wait();\n\n      const userAddress = await signer.getAddress();\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n\n      setSuccessMessage(`Minted ${mintAmount} ${tokenSymbol}.`);\n      setMintAmount('');\n    } catch (e) {\n      console.error('Error minting tokens:', e);\n      setError(`Failed to mint tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const transferTokens = async () => {\n    if (!tokenContract || !signer || !transferTo || !isValidAmount(transferAmount)) {\n      setError('Provide a valid recipient address and amount, and connect your wallet.');\n      return;\n    }\n\n    const userAddress = await signer.getAddress();\n    if (transferTo.toLowerCase() === userAddress.toLowerCase()) {\n      setError('You cannot transfer tokens to your own address.');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError('');\n    setSuccessMessage('');\n\n    try {\n      const amount = ethers.utils.parseEther(transferAmount.trim());\n      const tx = await tokenContract.transfer(transferTo, amount.toString());\n      await tx.wait();\n\n      const newBalance = await tokenContract.balanceOf(userAddress);\n      setBalance(ethers.utils.formatEther(newBalance));\n\n      setSuccessMessage(`Transferred ${transferAmount} ${tokenSymbol} to ${shortAddress(transferTo)}.`);\n      setTransferTo('');\n      setTransferAmount('');\n    } catch (e) {\n      console.error('Error transferring tokens:', e);\n      setError(`Failed to transfer tokens: ${e.message || 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleMintSubmit = (e) => {\n    e.preventDefault();\n    mintTokens();\n  };\n\n  const handleTransferSubmit = (e) => {\n    e.preventDefault();\n    transferTokens();\n  };\n\n  // Initialize provider on mount\n  useEffect(() => {\n    const checkIfMetaMaskIsInstalled = () => {\n      const { ethereum } = window;\n      return Boolean(ethereum && ethereum.isMetaMask);\n    };\n\n    const initProvider = async () => {\n      if (!checkIfMetaMaskIsInstalled()) {\n        setError('Please install MetaMask to use this application.');\n        return;\n      }\n\n      if (window.ethereum) {\n        try {\n          // Network guard (Arbitrum Sepolia by default from CONFIG)\n          try {\n            const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n            const chainIdNum = parseInt(chainId, 16);\n\n            if (chainIdNum !== CONFIG.CHAIN_ID_NUM) {\n              setError(`Switch to the correct network. Current chain ID: ${chainIdNum}`);\n              try {\n                await window.ethereum.request({\n                  method: 'wallet_switchEthereumChain',\n                  params: [{ chainId: CONFIG.NETWORK.chainId }],\n                });\n                setError('');\n              } catch (switchError) {\n                if (switchError.code === 4902) {\n                  try {\n                    await window.ethereum.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [CONFIG.NETWORK],\n                    });\n                    setError('');\n                  } catch (addError) {\n                    console.error('Error adding network:', addError);\n                    setError('Add the target network to MetaMask to continue.');\n                  }\n                } else {\n                  console.error('Error switching network:', switchError);\n                }\n              }\n            }\n          } catch (chainError) {\n            console.error('Error checking chain ID:', chainError);\n          }\n\n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          setProvider(web3Provider);\n\n          const accounts = await web3Provider.listAccounts();\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n            const nextSigner = web3Provider.getSigner();\n            setSigner(nextSigner);\n            await initContract(nextSigner);\n          }\n\n          window.ethereum.on('accountsChanged', (accounts) => {\n            if (accounts.length > 0) {\n              setAccount(accounts[0]);\n              const s = web3Provider.getSigner();\n              setSigner(s);\n              initContract(s);\n            } else {\n              setAccount('');\n              setSigner(null);\n              setTokenContract(null);\n              setBalance('0');\n            }\n          });\n\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n        } catch (e) {\n          console.error('Error initializing provider:', e);\n          setError('Failed to connect to the Ethereum provider.');\n        }\n      } else {\n        setError('Please install MetaMask to use this application.');\n      }\n    };\n\n    initProvider();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <div className=\"container\">\n          <h1 className=\"title\">Token Dashboard</h1>\n          <p className=\"subtitle\">Interact with your ERCâ€‘20 on {CONFIG.NETWORK.chainName || 'the configured network'}.</p>\n        </div>\n      </header>\n\n      <main className=\"container\">\n        <section className=\"toolbar\">\n          <ConnectWallet account={account} connectWallet={connectWallet} />\n        </section>\n\n        {error && <div className=\"alert alert-error\" role=\"alert\">{error}</div>}\n        {successMessage && <div className=\"alert alert-success\" role=\"status\">{successMessage}</div>}\n\n        {account ? (\n          <div className=\"grid\">\n            <div className=\"card\">\n              <h2 className=\"card-title\">{tokenName} ({tokenSymbol})</h2>\n              <div className=\"meta\">\n                <div className=\"meta-row\"><span className=\"label\">Contract</span><span className=\"value monospace\">{shortAddress(CONFIG.CONTRACT_ADDRESS)}</span></div>\n                <div className=\"meta-row\"><span className=\"label\">Account</span><span className=\"value monospace\">{shortAddress(account)}</span></div>\n                <div className=\"meta-row\"><span className=\"label\">Balance</span><span className=\"value\">{balance} {tokenSymbol}</span></div>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <h3 className=\"card-title\">Mint</h3>\n              <form onSubmit={handleMintSubmit} className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"mintAmount\">Amount</label>\n                  <input\n                    type=\"text\"\n                    id=\"mintAmount\"\n                    value={mintAmount}\n                    onChange={(e) => setMintAmount(e.target.value)}\n                    placeholder=\"e.g. 100.0\"\n                    inputMode=\"decimal\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn\" disabled={isProcessing}>\n                  {isProcessing ? 'Processingâ€¦' : 'Mint'}\n                </button>\n              </form>\n            </div>\n\n            <div className=\"card\">\n              <h3 className=\"card-title\">Transfer</h3>\n              <form onSubmit={handleTransferSubmit} className=\"form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"transferTo\">Recipient</label>\n                  <input\n                    type=\"text\"\n                    id=\"transferTo\"\n                    value={transferTo}\n                    onChange={(e) => setTransferTo(e.target.value)}\n                    placeholder=\"0xâ€¦\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"transferAmount\">Amount</label>\n                  <input\n                    type=\"text\"\n                    id=\"transferAmount\"\n                    value={transferAmount}\n                    onChange={(e) => setTransferAmount(e.target.value)}\n                    placeholder=\"e.g. 25\"\n                    inputMode=\"decimal\"\n                    autoComplete=\"off\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn\" disabled={isProcessing}>\n                  {isProcessing ? 'Processingâ€¦' : 'Transfer'}\n                </button>\n              </form>\n            </div>\n          </div>\n        ) : (\n          <div className=\"empty-state card\">\n            <h2 className=\"card-title\">Wallet not connected</h2>\n            <p>Connect your wallet to view your balance and manage tokens.</p>\n          </div>\n        )}\n      </main>\n\n      <footer className=\"app-footer\">\n        <div className=\"container\">\n          <p>Built on {CONFIG.NETWORK.chainName || 'configured network'}</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}